// Mocks generated by Mockito 5.4.0 from annotations
// in client/test/features/home/data/repositories/home_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:client/common/entity/message.dart' as _i7;
import 'package:client/features/home/data/datasources/home_local_data_source.dart'
    as _i5;
import 'package:client/features/home/data/datasources/home_remote_data_source.dart'
    as _i8;
import 'package:client/features/home/domain/entities/contact.dart' as _i9;
import 'package:client/features/home/domain/entities/user.dart' as _i4;
import 'package:client/features/home/presentation/cubit/home_cubit.dart' as _i2;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNewMessages_0 extends _i1.SmartFake implements _i2.NewMessages {
  _FakeNewMessages_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_3 extends _i1.SmartFake implements _i4.User {
  _FakeUser_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeLocalDataSource extends _i1.Mock
    implements _i5.HomeLocalDataSource {
  MockHomeLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i2.NewMessages>> getChats() => (super.noSuchMethod(
        Invocation.method(
          #getChats,
          [],
        ),
        returnValue:
            _i6.Future<List<_i2.NewMessages>>.value(<_i2.NewMessages>[]),
      ) as _i6.Future<List<_i2.NewMessages>>);
  @override
  _i6.Future<bool> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.NewMessages> cacheMessage(
    _i7.Message? message,
    String? from,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheMessage,
          [
            message,
            from,
          ],
        ),
        returnValue: _i6.Future<_i2.NewMessages>.value(_FakeNewMessages_0(
          this,
          Invocation.method(
            #cacheMessage,
            [
              message,
              from,
            ],
          ),
        )),
      ) as _i6.Future<_i2.NewMessages>);
  @override
  _i6.Future<void> cacheFriend(String? username) => (super.noSuchMethod(
        Invocation.method(
          #cacheFriend,
          [username],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [HomeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSource extends _i1.Mock
    implements _i8.HomeRemoteDataSource {
  MockHomeRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Client);
  @override
  _i6.Future<List<_i9.Contact>> getAllPeople({required String? token}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPeople,
          [],
          {#token: token},
        ),
        returnValue: _i6.Future<List<_i9.Contact>>.value(<_i9.Contact>[]),
      ) as _i6.Future<List<_i9.Contact>>);
}

/// A class which mocks [Message].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessage extends _i1.Mock implements _i7.Message {
  MockMessage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set chatId(int? _chatId) => super.noSuchMethod(
        Invocation.setter(
          #chatId,
          _chatId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get content => (super.noSuchMethod(
        Invocation.getter(#content),
        returnValue: '',
      ) as String);
  @override
  bool get isme => (super.noSuchMethod(
        Invocation.getter(#isme),
        returnValue: false,
      ) as bool);
  @override
  set isme(bool? _isme) => super.noSuchMethod(
        Invocation.setter(
          #isme,
          _isme,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get time => (super.noSuchMethod(
        Invocation.getter(#time),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#time),
        ),
      ) as DateTime);
  @override
  set time(DateTime? _time) => super.noSuchMethod(
        Invocation.setter(
          #time,
          _time,
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic setChatId(int? id) => super.noSuchMethod(Invocation.method(
        #setChatId,
        [id],
      ));
}

/// A class which mocks [NewMessages].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewMessages extends _i1.Mock implements _i2.NewMessages {
  MockNewMessages() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.User get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeUser_3(
          this,
          Invocation.getter(#user),
        ),
      ) as _i4.User);
  @override
  set user(_i4.User? _user) => super.noSuchMethod(
        Invocation.setter(
          #user,
          _user,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get messageCount => (super.noSuchMethod(
        Invocation.getter(#messageCount),
        returnValue: 0,
      ) as int);
  @override
  set messageCount(int? _messageCount) => super.noSuchMethod(
        Invocation.setter(
          #messageCount,
          _messageCount,
        ),
        returnValueForMissingStub: null,
      );
}
